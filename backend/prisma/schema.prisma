// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            BigInt       @id @default(autoincrement())
  username      String       @unique
  email         String       @unique
  password_hash String
  created_at    DateTime     @default(now())
  updated_at    DateTime     @updatedAt
  Feed          Feed[]
  ChatFrom      Chat[]       @relation("ChatFrom")
  ChatTo        Chat[]       @relation("ChatTo")
  ConnectionRequestFrom ConnectionRequest[] @relation("ConnectionRequestFrom")
  ConnectionRequestTo   ConnectionRequest[] @relation("ConnectionRequestTo")
  ConnectionFrom Connection[] @relation("ConnectionFrom")
  ConnectionTo   Connection[] @relation("ConnectionTo")
  PushSubscription PushSubscription[]
}

model Feed {
  id         BigInt   @id @default(autoincrement())
  content    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user_id    BigInt
  User       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
}

model Chat {
  id         BigInt   @id @default(autoincrement())
  timestamp  DateTime @default(now())
  from_id    BigInt
  to_id      BigInt
  message    String
  From       User     @relation("ChatFrom", fields: [from_id], references: [id], onDelete: Cascade)
  To         User     @relation("ChatTo", fields: [to_id], references: [id], onDelete: Cascade)

  @@index([from_id,to_id])
}

model ConnectionRequest {
  from_id    BigInt
  to_id      BigInt
  created_at DateTime
  From       User     @relation("ConnectionRequestFrom", fields: [from_id], references: [id], onDelete: Cascade)
  To         User     @relation("ConnectionRequestTo", fields: [to_id], references: [id], onDelete: Cascade)
  @@id([from_id, to_id])
}

model Connection {
  from_id    BigInt
  to_id      BigInt
  created_at DateTime
  From       User     @relation("ConnectionFrom", fields: [from_id], references: [id], onDelete: Cascade)
  To         User     @relation("ConnectionTo", fields: [to_id], references: [id], onDelete: Cascade)
  @@id([from_id, to_id])
}

model PushSubscription {
  endpoint   String  @id
  user_id    BigInt?
  keys       Json
  created_at DateTime @default(now())
  User       User?   @relation(fields: [user_id], references: [id], onDelete: SetNull)
  @@index([user_id])
}
